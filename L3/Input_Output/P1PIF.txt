cardsAre - Pair{first=-1, second=-1} -> 2
int - Pair{first=-1, second=-1} -> 2
IDENTIFIER - Pair{first=97, second=0} -> 1
int - Pair{first=-1, second=-1} -> 2
IDENTIFIER - Pair{first=98, second=0} -> 1
int - Pair{first=-1, second=-1} -> 2
IDENTIFIER - Pair{first=99, second=0} -> 1
int - Pair{first=-1, second=-1} -> 2
IDENTIFIER - Pair{first=26, second=0} -> 1
yo - Pair{first=-1, second=-1} -> 2
IDENTIFIER - Pair{first=26, second=0} -> 1
hasRule - Pair{first=-1, second=-1} -> 2
CONST - Pair{first=38, second=0} -> 0
readRulesFor - Pair{first=-1, second=-1} -> 2
( - Pair{first=-1, second=-1} -> 4
IDENTIFIER - Pair{first=97, second=0} -> 1
) - Pair{first=-1, second=-1} -> 4
readRulesFor - Pair{first=-1, second=-1} -> 2
( - Pair{first=-1, second=-1} -> 4
IDENTIFIER - Pair{first=98, second=0} -> 1
) - Pair{first=-1, second=-1} -> 4
readRulesFor - Pair{first=-1, second=-1} -> 2
( - Pair{first=-1, second=-1} -> 4
IDENTIFIER - Pair{first=99, second=0} -> 1
) - Pair{first=-1, second=-1} -> 4
if - Pair{first=-1, second=-1} -> 2
( - Pair{first=-1, second=-1} -> 4
IDENTIFIER - Pair{first=97, second=0} -> 1
>= - Pair{first=-1, second=-1} -> 3
IDENTIFIER - Pair{first=98, second=0} -> 1
&& - Pair{first=-1, second=-1} -> 3
IDENTIFIER - Pair{first=97, second=0} -> 1
>= - Pair{first=-1, second=-1} -> 3
IDENTIFIER - Pair{first=99, second=0} -> 1
) - Pair{first=-1, second=-1} -> 4
yo - Pair{first=-1, second=-1} -> 2
IDENTIFIER - Pair{first=26, second=0} -> 1
hasRule - Pair{first=-1, second=-1} -> 2
IDENTIFIER - Pair{first=97, second=0} -> 1
itsDone - Pair{first=-1, second=-1} -> 2
if - Pair{first=-1, second=-1} -> 2
( - Pair{first=-1, second=-1} -> 4
IDENTIFIER - Pair{first=98, second=0} -> 1
>= - Pair{first=-1, second=-1} -> 3
IDENTIFIER - Pair{first=97, second=0} -> 1
&& - Pair{first=-1, second=-1} -> 3
IDENTIFIER - Pair{first=98, second=0} -> 1
>= - Pair{first=-1, second=-1} -> 3
IDENTIFIER - Pair{first=99, second=0} -> 1
) - Pair{first=-1, second=-1} -> 4
yo - Pair{first=-1, second=-1} -> 2
IDENTIFIER - Pair{first=26, second=0} -> 1
hasRule - Pair{first=-1, second=-1} -> 2
IDENTIFIER - Pair{first=98, second=0} -> 1
itsDone - Pair{first=-1, second=-1} -> 2
else - Pair{first=-1, second=-1} -> 2
yo - Pair{first=-1, second=-1} -> 2
IDENTIFIER - Pair{first=26, second=0} -> 1
hasRule - Pair{first=-1, second=-1} -> 2
IDENTIFIER - Pair{first=99, second=0} -> 1
itsDone - Pair{first=-1, second=-1} -> 2
uno - Pair{first=-1, second=-1} -> 2
( - Pair{first=-1, second=-1} -> 4
IDENTIFIER - Pair{first=26, second=0} -> 1
) - Pair{first=-1, second=-1} -> 4
itsDone - Pair{first=-1, second=-1} -> 2

